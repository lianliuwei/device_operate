{
  'variables': {
    'BASE_PATH': '../third_party/chromium/',
  },
  'targets' : [
    {
      'target_name': 'wave_control',
      'type': 'static_library',
      'dependencies': [
        '<(BASE_PATH)/base/base_bin.gyp:base_bin',
        '<(BASE_PATH)/ui/ui_bin.gyp:ui_bin',
        '<(BASE_PATH)/ui/ui_bin.gyp:ui_resources_bin',
        '<(BASE_PATH)/ui/views/views_bin.gyp:views_bin',
        '<(BASE_PATH)/skia/skia_bin.gyp:skia_bin',
      ],
      'include_dirs': [
        '..',
      ],
      'sources': [
        # view model
        'wave_control.h',
        'wave_control.cc',
        'wave_container.h',
        'wave_container.cc',
        'yt_wave_container.h',
        'yt_wave_container.cc',
        'yl_wave_container.h',
        'xy_wave_container.h',
        'wave.h',
        'wave.cc',
        'osc_wave.h',
        'osc_wave.cc',
        'osc_wave_observer.h',
        'simple_ana_wave.h',
        'simple_ana_wave.cc',
        'simple_ana_wave_observer.h',
        'simple_digit_wave.h',
        
        # view model visitor
        'wave_control_visitor.h',
        'wave_container_visitor.h',
        'wave_visitor.h',
        
        # wave data
        'ana_wave_data.h',
        'ana_wave_data.cc',
        'wave_range.h',
        'wave_range.cc',
        
        'wave_view.h',
        # model impl
        'default_simple_ana_wave.h',
        'default_simple_ana_wave.cc',
        'classify_wave_control.h',
        'classify_wave_control.cc',
        
        # osc wave grup
        'osc_wave_group/osc_wave_group.h',
        'osc_wave_group/osc_wave_group.cc',
        'osc_wave_group/trigger_part.h',
        'osc_wave_group/horizontal_part.h',
        'osc_wave_group/vertical_part.h',
        'osc_wave_group/osc_wave_group_observer.h',
        
        # osc wave group impl
        'osc_wave_group/common_osc_wave_group.h',
        'osc_wave_group/common_osc_wave_group.cc',
        
        # views model match view
        'views/wave_control_view_factory.h',
        'views/wave_control_view_factory.cc',
        'views/wave_control_view.h',
        'views/wave_control_view.cc',
        'views/yt_wave_container_view.h',
        'views/yt_wave_container_view.cc',
        'views/osc_wave_view.h',
        'views/osc_wave_view.cc',
        'views/simple_ana_wave_view.h',
        'views/simple_ana_wave_view.cc',
        
        # views impl
        'views/yt_wave_container_inner_view.h',
        'views/yt_wave_container_inner_view.cc',
        'views/axis_background.h',
        'views/axis_background.cc',
        'views/axis_painter.h',
        'views/axis_painter.cc',
        'views/handle.h',
        'views/handle.cc',
        'views/handle_bar.h',
        'views/handle_bar.cc',
        'views/delay_setter.h',
        'views/delay_setter.cc',
        'views/handle_bar_observer.h',
        'views/handle_bar_model.h',
        'views/handle_bar_model_observer.h',
        'views/ana_wave_data_view.h',
        'views/ana_wave_data_view.cc',
        'views/transform_util.h',
        'views/transform_util.cc',
        'views/wave_control_views_constants.h',
        'views/fill_box_layout.h',
        'views/fill_box_layout.cc',
        'views/all_fill_layout.h',
        'views/all_fill_layout.cc',
        'views/handle_point_view.h',
        'views/handle_point_view.cc',
        'views/dragged_thumb_view.h',
        'views/dragged_thumb_view.cc',
        'views/wave_drag_controller.h',
        'views/wave_drag_controller.cc',
        'views/measure_line/measure_line.h',
        'views/measure_line/dual_line_view.h',
        'views/measure_line/dual_line_view.cc',
        'views/measure_line/single_line_view.h',
        'views/measure_line/single_line_view.cc',
        'views/measure_line/measure_line_container_view.h',
        'views/measure_line/measure_line_container_view.cc',
        'views/measure_line/measure_line_part_view.h',
        'views/measure_line/measure_line_part_view.cc',
      ],
    }, 
    {
      'target_name': 'wave_control_test_support',
      'type': 'static_library',
      'sources' : [
        'test/run_all_unittests.cc',
        'test/test_suite.h',
        'test/test_suite.cc',
        'test/perftimer.h',
        'test/perftimer.cc',
      ],
      'include_dirs': [
        '..',
      ], 
       'dependencies': [
        '<(BASE_PATH)/base/base_bin.gyp:base_bin',
        '<(BASE_PATH)/testing/gtest.gyp:gtest',
       ],
    },
    {
      'target_name': 'wave_control_unittests',
      'type': '<(gtest_target_type)',
      'sources': [
        'osc_wave_group/common_osc_wave_group_unittest.cc',
        'examples/test_osc_wave.h',
        'examples/test_osc_wave.cc',
      ],
      
      'include_dirs': [
        '..',
      ], 
      'dependencies': [
        '<(BASE_PATH)/base/base_bin.gyp:base_bin',
        '<(BASE_PATH)/base/base_bin.gyp:base_prefs_bin',
        '<(BASE_PATH)/base/third_party/dynamic_annotations/dynamic_annotations.gyp:dynamic_annotations',
        '<(BASE_PATH)/base_ex/base_ex.gyp:base_ex',
        '<(BASE_PATH)/ui/ui_bin.gyp:ui_bin',
        '<(BASE_PATH)/skia/skia_bin.gyp:skia_bin',
        '<(BASE_PATH)/testing/gmock.gyp:gmock',
        '<(BASE_PATH)/testing/gtest.gyp:gtest',
        'wave_control_test_support',
        'wave_control',
      ],
    },
 ],
}